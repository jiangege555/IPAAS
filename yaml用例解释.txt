test_stream_create: --> 接口标识
  - name: 正确创建群控会话 --> 用例名称描述
    mark: smoke --> 用例标记，可以自定义，执行时可以指定运行某些标记的用例，也可以传多个[smoke, pressure]
    request: --> 请求信息
      url: /v1/multiple/stream/session/create --> 请求地址
      method: post --> 请求方法，get、post、delete
      async: false --> 是否异步
      data: --> 请求参数，空json就写{}，空参数data下面啥都不写，写变量的话用{{变量名}}，支持列表切片，字典取值，过滤器（可自定义扩展），变量均存储在各自__init__.py文件global_data_下
        param1: test --> 普通参数
        param2: {{instance_ids[0]}} --> 带变量列表索引取值
        param3: {{instance_ids[1:3]}} --> 带变量列表切片
        param4: {% set id = instance_ids | random_one %}{{ id }} --> 设一个id变量，接收处理后的instance_ids，instance_ids用random_one过滤器处理过，{{id}}表示param4实际得到的值
        param5: {{ instance_ids.copy() | remove_one(id)}} --> 使用instance_ids的复制体，并使用过滤器处理，过滤器可接收上面的id参数
    before_request: 支持自定义方法，在请求前调用，在BaseTestCase类中添加，列表形式（如果这里的方法是为了生成变量并传递给data，则data里变量格式使用 $变量名 或者 ${变量名}）
    after_request:  支持自定义方法，在请求后、提取变量后调用，在BaseTestCase类中添加，列表形式
    extract: --> 变量提取，支持多个提取
      - sessionId: --> 程序需要使用的变量名
          type: json --> jsonpath提取，目前主要采用这种，后续有需要可以扩展正则
          path: $.data.sessionId --> jsonpath，提取出来结果为[]类型
          index: 0 --> 取上面提取的jsonpath的索引值，-1表示整个列表提取
          key: session_id --> 存入全局变量字典中的key值
    validate: --> 校验，支持多个校验，异步接口可不做以下校验，程序通过任务查询做最终校验
      - status: --> 校验的参数名
          type: json --> 校验方式，jsonpath提取
          path: $.status --> jsonpath，提取出来结果为[]类型
          index: 0 --> 取上面提取的jsonpath的索引值，-1表示整个列表提取
          sign: eq --> eq表示等于，ne表示不等于，lt表示小于，gt表示大于，le表示小于等于，ge表示大于等于，in在里面，nin不在里面
          value: 0 --> 断言的预期值
      - sessionId:
          type: json
          path: $.data.sessionId
          index: -1
          sign: ne
          value: false
      - failInstanceIds:
          type: json
          path: $.data.failInstanceIds
          index: 0
          sign: eq
          value: []